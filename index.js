const fs = require('fs');
const path = require('path');
const { Client, GatewayIntentBits, Collection } = require('discord.js');
const mongoose = require('mongoose');
const express = require('express'); // Express Î™®Îìà Ï∂îÍ∞Ä
require('dotenv').config(); // dotenv Î™®Îìà Ï∂îÍ∞Ä

// ÌôòÍ≤Ω Î≥ÄÏàòÏóêÏÑú Í∞ÄÏ†∏Ïò§Í∏∞
const { DISCORD_TOKEN, mongoURI } = process.env;

// Express Ïï± ÏÑ§Ï†ï
const app = express();

// Î¥á ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÑ§Ï†ï
const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.GuildMembers,
        GatewayIntentBits.MessageContent
    ]
});

// Î™ÖÎ†πÏñ¥ Îì±Î°ù
client.commands = new Collection();
const commandFiles = fs.readdirSync(path.join(__dirname, 'commands')).filter(file => file.endsWith('.js'));

for (const file of commandFiles) {
    const command = require(`./commands/${file}`);
    client.commands.set(command.data.name, command);
}

// Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨ Îì±Î°ù
const eventFiles = fs.readdirSync(path.join(__dirname, 'events')).filter(file => file.endsWith('.js'));

for (const file of eventFiles) {
    const event = require(`./events/${file}`);
    if (event.once) {
        client.once(event.name, (...args) => event.execute(...args));
    } else {
        client.on(event.name, (...args) => event.execute(...args));
    }
}

const { loginToRoblox } = require('./utils/roblox');

client.once('ready', async () => {
    console.log(`‚úÖ ${client.user.tag} Î¥áÏù¥ Ïò®ÎùºÏù∏ÏûÖÎãàÎã§!`);
    await loginToRoblox(); // üîπ Î°úÎ∏îÎ°ùÏä§ Î°úÍ∑∏Ïù∏ Ïã§Ìñâ
});

// ‚úÖ MongoDB Ïó∞Í≤∞ (Í≤ΩÍ≥† Ìï¥Í≤∞)
mongoose.connect(mongoURI, { useNewUrlParser: true, useUnifiedTopology: true })
    .then(() => console.log('‚úÖ MongoDB Ïó∞Í≤∞ ÏÑ±Í≥µ!'))
    .catch(err => console.error('‚ùå MongoDB Ïó∞Í≤∞ Ïã§Ìå®:', err));

// Express ÏÑúÎ≤Ñ ÏÑ§Ï†ï
const port = process.env.PORT || 3000;
app.listen(port, () => {
    console.log(`Server is running on port ${port}`);
});

// Î¥á Î°úÍ∑∏Ïù∏
client.login(DISCORD_TOKEN);